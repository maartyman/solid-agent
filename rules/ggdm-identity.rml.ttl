@prefix rml:  <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix qst:  <https://vito.be/schema/qst#> .
@prefix ggdm: <https://vito.be/schema/ggdm#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix sur:  <https://w3id.org/survey-ontology#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix :     <http://example.com/ggdmmapping/> .
@prefix sd:     <http://www.w3.org/ns/sparql-service-description#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/> .

:sparqlService a sd:Service ;
	sd:endpoint <http://localhost:3330/sparql> ;
	sd:supportedLanguage sd:SPARQL11Query ;
	sd:resultFormat <http://www.w3.org/ns/formats/SPARQL_Results_JSON> .

:answerSource a rml:LogicalSource ;
	rml:source :sparqlService ;
	rml:referenceFormulation ql:JSONPath ;
	rml:iterator "$.results.bindings[*]" ;
	rml:query
	"""
	prefix ggdm: <https://vito.be/schema/ggdm#> 
	prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
	prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
	prefix owl:  <http://www.w3.org/2002/07/owl#> 
	prefix xsd:  <http://www.w3.org/2001/XMLSchema#> 
	prefix sur:  <https://w3id.org/survey-ontology#> 
	prefix prov: <http://www.w3.org/ns/prov#> 
	
	SELECT ?question ?completedQuestion ?answer ?date ?person ?session
	WHERE {
		?session prov:atTime ?date ;
            prov:wasAssociatedWith ?person .
        ?completedQuestion sur:answeredIn ?session ;
            sur:hasAnswer ?answer ;
            sur:completesQuestion ?question .
	}
	""" .
	
:completedQuestionTriplesMap a rr:TriplesMap ;
	rml:logicalSource :answerSource ;
	rr:subjectMap [
		rml:reference "completedQuestion.value" ;
		rr:termType rr:IRI 
		] ;
	rr:predicateObjectMap [
		rr:predicate sur:answeredIn ;
		rr:objectMap [
			rml:reference "session.value" ;
			rr:termType rr:IRI 
			] 
		] ;
	rr:predicateObjectMap [
		rr:predicate sur:hasAnswer ;
		rr:objectMap [
			rml:reference "answer.value" ;
			rr:termType rr:IRI 
			] 
		] ;
	rr:predicateObjectMap [
		rr:predicate sur:completesQuestion ;
		rr:objectMap [
			rml:reference "question.value" ;
			rr:termType rr:IRI 
			] 
		] .
		
:sessionTriplesMap a rr:TriplesMap ;
	rml:logicalSource :answerSource ;
	rr:subjectMap [
		rml:reference "session.value" ;
		rr:termType rr:IRI 
		] ;
	rr:predicateObjectMap [
		rr:predicate prov:atTime ;
		rr:objectMap [
			rml:reference "date.value" ;
			rr:datatype xsd:date 
			] 
		] ;
	rr:predicateObjectMap [
		rr:predicate prov:wasAssociatedWith ;
		rr:objectMap [
			rml:reference "person.value" ;
			rr:termType rr:IRI 
			] 
		] .

:personSource a rml:LogicalSource ;
	rml:source :sparqlService ;
	rml:referenceFormulation ql:JSONPath ;
	rml:iterator "$.results.bindings[*]" ;
	rml:query
	"""
	prefix ggdm: <https://vito.be/schema/ggdm#> 
	prefix foaf: <http://xmlns.com/foaf/0.1/>

	SELECT ?person ?givenname ?familyname ?weightparam
	WHERE {
		?person a foaf:Person ;
            foaf:givenName ?givenname ;
            foaf:familyName ?familyname ;
            ggdm:parameterweight ?weightparam .
	}
	""" .

:personTriplesMap a rr:TriplesMap ;
    rml:logicalSource :personSource ;
    rr:subjectMap [
        rml:reference "person.value" ;
        rr:termType rr:IRI 
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:type ;
        rr:object foaf:Person 
    ] ;
    rr:predicateObjectMap [
        rr:predicate foaf:givenName ;
        rr:objectMap [
            rml:reference "givenname.value" ;
            rr:termType rr:Literal 
        ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate foaf:familyName ;
        rr:objectMap [
            rml:reference "familyname.value" ;
            rr:termType rr:Literal 
        ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate ggdm:parameterWeight ;
        rr:objectMap [
            rml:reference "weightparam.value" ;
            rr:termType rr:Literal 
        ]
    ] .